services:
  netbox:
    image: netboxcommunity/netbox:latest
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8500:8080"
    volumes:
      - netbox-static-files:/opt/netbox/netbox/static
      - netbox-media-files:/opt/netbox/netbox/media
    environment:
      - SUPERUSER_USERNAME=admin
      - SUPERUSER_PASSWORD=admin123
      - SUPERUSER_EMAIL=admin@example.com
      - SUPERUSER_API_TOKEN=0123456789abcdef0123456789abcdef01234567
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=netbox
      - DB_USER=netbox
      - DB_PASSWORD=securepassword123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=redissecure123
      - SECRET_KEY=2vym+ky!j+djr0ddsquf0#b%7g$m^p%es3b)g=m_m3v%98u%ak
      - ALLOWED_HOSTS=localhost,127.0.0.1
      - NAPALM_USERNAME=admin
      - NAPALM_PASSWORD=admin123
      - TIME_ZONE=UTC
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=netbox
      - POSTGRES_USER=netbox
      - POSTGRES_PASSWORD=securepassword123
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "netbox"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7
    command: redis-server --requirepass redissecure123
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "redissecure123", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  netbox-static-files:
  netbox-media-files:
  postgres-data:
  redis-data:
